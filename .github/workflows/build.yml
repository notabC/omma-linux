name: Build Omma for Raspberry Pi

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # Allow manual triggers

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux-arm64:
    runs-on: ubuntu-22.04-arm  # Native ARM64 runner (FREE for public repos!)
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-4-dev libadwaita-1-dev pkg-config build-essential

    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-arm64-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-arm64-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-arm64-cargo-build-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release binary (native ARM64)
      run: |
        cargo build --release
        strip target/release/omma

    - name: Prepare artifact
      run: |
        mkdir -p dist
        cp target/release/omma dist/omma-aarch64-unknown-linux-gnu
        chmod +x dist/omma-aarch64-unknown-linux-gnu
        ls -lh dist/
        file dist/omma-aarch64-unknown-linux-gnu

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: omma-aarch64-unknown-linux-gnu
        path: dist/omma-aarch64-unknown-linux-gnu
        retention-days: 30

  build-linux-arm32:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build in ARM32 environment
      uses: pguyot/arm-runner-action@v2
      with:
        base_image: raspios_lite:latest
        cpu: cortex-a7
        commands: |
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y curl build-essential libgtk-4-dev libadwaita-1-dev pkg-config

          # Install Rust
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source "$HOME/.cargo/env"

          # Build release binary
          cargo build --release
          strip target/release/omma

          # Prepare artifact
          mkdir -p dist
          cp target/release/omma dist/omma-armv7-unknown-linux-gnueabihf
          chmod +x dist/omma-armv7-unknown-linux-gnueabihf
          ls -lh dist/
          file dist/omma-armv7-unknown-linux-gnueabihf

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: omma-armv7-unknown-linux-gnueabihf
        path: dist/omma-armv7-unknown-linux-gnueabihf
        retention-days: 30

  create-release:
    needs: [build-linux-arm64, build-linux-arm32]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          omma-aarch64-unknown-linux-gnu/omma-aarch64-unknown-linux-gnu
          omma-armv7-unknown-linux-gnueabihf/omma-armv7-unknown-linux-gnueabihf
        body: |
          ## Omma Linux Release

          Download the appropriate binary for your Raspberry Pi:
          - **Raspberry Pi 3/4/5 (64-bit OS)**: `omma-aarch64-unknown-linux-gnu`
          - **Raspberry Pi 2/3 (32-bit OS)**: `omma-armv7-unknown-linux-gnueabihf`

          ### Installation
          ```bash
          # Download the binary (replace URL with actual release URL)
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/omma-aarch64-unknown-linux-gnu

          # Make it executable
          chmod +x omma-aarch64-unknown-linux-gnu

          # Move to /usr/local/bin (optional)
          sudo mv omma-aarch64-unknown-linux-gnu /usr/local/bin/omma

          # Run
          omma
          ```

          ### Requirements
          Install GTK4 and libadwaita on your Pi:
          ```bash
          sudo apt-get update
          sudo apt-get install -y libgtk-4-1 libadwaita-1-0
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
